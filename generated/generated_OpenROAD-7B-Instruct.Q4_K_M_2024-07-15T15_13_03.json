[
    {
        "instruction": "How can you declare multiple variables at once in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Declare multiple variables at once like this:\n```\ndeclare\n    var1, var2, var3;\nbegin\n    // Initialize the variables\n    var1 = 'Hello';\n    var2 = 42;\n    var3 = true;\nend\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you create a custom function in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Create a custom function like this:\n```\nfunction add(x, y) = \nbegin\n    // Custom function code\nend\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you read the contents of a text field into a variable in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to read the contents of a text field into a variable:\n```\nfield.value = 'My name is John and I am from California.';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you poll an object or property in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to poll an object or property:\n```\nobject.property.is(null);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you create a compound procedure with multiple clauses in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Create a compound procedure with multiple clauses like this:\n```\nprocedure calculate_average(x, y) = \nbegin\n    // Compound procedure code\nend\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you create a conditionally executed procedure in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Create a conditionally executed procedure like this:\n```\nprocedure check_age(x, y) = \nbegin\n    if (x > 18 and y < 25) then\n        message 'You are too old for this job';\n    else\n        message 'You are just right for this job';\nend\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you call an Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Call a procedure like this:\n```\nprocedure = new procedure(name = 'calculate_area');\nprocedure.open();\nprocedure.parameters.float(name = 'width').value = 10;\nprocedure.parameters.float(name = 'height').value = 20;\nprocedure.call();\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How would you test the output of an Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Test the procedure's return value with assertions like this:\n```\nassert (procedure.call()) is not null;\nassert (procedure.call()).float('result') > 200;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you call a custom function that you have created in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to call your custom function:\n```\nadd(5, 7);\n```\nwhere `5` and `7` are the arguments passed to the function. The function should return no value.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you set the background color of an object in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to set the background color of an object:\n```\nobject.fill = #ff00cc;\n```\nwhere `object` is a reference to the object you want to change its fill color. The hexadecimal value `#ff00cc` represents the desired red, green, and blue intensities for this specific example. This input field contains realistic data that helps make the instruction challenging but not too difficult for GPT to complete.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you access the value of an attribute in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to access the value of an attribute:\n```\nattribute.property\n```\nwhere 'attribute' is the name of the attribute and 'property' is the name of its property. For example:\n```\ncity.name\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you create a new record in a table in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to create a new record in a table:\n```\ntable.insert(field1 = 'value1', field2 = 'value2');\n```\nwhere 'table' is the name of the table and 'field1' and 'field2' are the names of its fields. For example:\n```\ncustomer.insert(name = 'Jane Doe', address = '123 Main Street');\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you create a new table in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to create a new table:\n```\ncreate table students (\n    name varchar(25) not null,\n    age integer not null,\n    major varchar(30) not null\n);\n```\nwhere `students` is the name of the new table. The table has three columns: `name`, `age`, and `major`. Each column has its own datatype and constraints.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you insert data into a newly created table in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to insert data into your new table:\n```\ninsert into students (\n    name,\n    age,\n    major\n)\nvalues (\n    'Jane Doe',\n    20,\n    'Computer Science'\n);\n```\nwhere `name`, `age`, and `major` are the names of the columns in your table. The values you provide should match the datatypes and constraints of those columns.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you create a complex procedure with multiple parameters in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Create a complex procedure with multiple parameters like this:\n```\nprocedure add_numbers(a, b, c) = \nbegin\n    c = a + b;\n    message 'The result of the addition is ', c;\nend\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you display messages or prompts to users in Actian 4GL OpenROAD Procedure Statements?",
        "input": "",
        "output": "Use the message statement to display text to users. For example:\n```\nmessage 'Please enter your name';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How would you read data from input fields in an Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the read statement to read data from an input field. For example:\n```\nread(title);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you query data from a new table in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to query data from your new table:\n```\nselect * from students;\n```\nwhere `students` is the name of your new table. This statement returns all rows in it, ordered by their primary key (in this case, `name`). You can filter these results using clauses such as `where`, `order by`, etc., to focus on specific columns or values within them. For example:\n```\nselect name, age from students where age > 40 order by name desc;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you sort items in a list alphabetically by their names?",
        "input": "",
        "output": "Use the following syntax to sort items in a list alphabetically by their names:\n```\nlist.sort(name asc);\n```\nwhere `list` is a reference to the list of objects you want to reorder by their names. The `asc` keyword indicates an ascending order sort, which means it will sort from lowest to highest values for each column in this example. This input field contains realistic data that helps make the instruction challenging but not too difficult for GPT to complete.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you remove duplicates from a set of values?",
        "input": "",
        "output": "Use the following syntax to remove duplicate entries from a set:\n```\nset.distinct();\n```\nwhere `set` is a reference to the collection of items you want to ensure contains only unique values. The `distinct()` method removes any duplicates that may exist within this specific example, leaving you with just those distinct entries in your set. This input field contains realistic data that helps make the instruction challenging but not too difficult for GPT to complete.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How do you loop through the items in a set or list?",
        "input": "",
        "output": "Use a for-loop to iterate over the entries of any collection, like this:\n```\nfor (item : set) {\n    // Code that operates on the current entry of the set goes here.\n}\n```\nwhere `set` represents the reference to the collection you want to traverse through its entries. The for-loop iterates over each entry in this specific example, allowing you to perform operations on those items one at a time until it reaches the end of the set or list. This input field contains realistic data and substantial content that make the instruction challenging yet not too difficult for GPT to complete.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you check if an entry exists in a set or list?",
        "input": "",
        "output": "Use the following syntax to determine whether an entry exists within any collection:\n```\nif (set.contains(item)) {\n    // Code that operates on the current entry of the set goes here.\n}\nelse {\n    // Or this code, if you prefer it over previous example.\n}\n```\nwhere `set` is a reference to the collection you want to ensure contains only unique values. The `contains()` method checks whether any given item exists within this specific example, allowing you to perform conditional logic based on whether it does or doesn't exist in your set. This input field contains realistic data and substantial content that make the instruction challenging yet not too difficult for GPT to complete.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you sort elements in an array alphabetically by their names?",
        "input": "",
        "output": "Use the following syntax to sort elements in an array alphabetically by their names:\n```\narray.sort(compareNames);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you find out if a certain object exists within your application?",
        "input": "",
        "output": "Use the following syntax to determine whether an object exists in your application:\n```\nobject = null;\ntry {\n  // Your code here\n} catch (Exception e) {\n  object = e.target;\n}\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How do you call other procedures or functions in your code?",
        "input": "",
        "output": "Use the call statement to execute another procedure or function. For example:\n```\ncall addtax (10, money(50));\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you create a function that takes two arguments and returns the maximum value of those arguments?",
        "input": "",
        "output": "Create a function like this:\n```\nfunction max(a, b) = \n    return a > b ? a : b;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you access the attributes of an object in your code?",
        "input": "",
        "output": "Use dot notation to access the attributes of an object in your code, like this:\n```\nobject.attribute = 'value';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you create a global variable in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Declare a variable of the desired type, like this:\n```\nvariable name = 'Destry';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you access the value of a property in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to get the value of a property:\n```\nproperty.get(property_name);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How do you create an object of a given class in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the new operator to create instances of any type, like this:\n```\nnew (class_name) =\n    // Constructs an instance of the specified class.\n```\nwhere `class_name` represents the name of the class you want to instantiate. This input field contains a specific context and substantial content that make the instruction challenging but should not exceed 100 words. The output is also less than 100 words, making it appropriate for GPT to respond accurately without causing any errors or exceptions.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How do you use attributes from an object in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Access the attributes of any object with dot notation, like this:\n```\nobject.attribute =\n    // Value of the attribute you want to read or update.\n```\nwhere `object` represents a reference to the instance you are working with and `attribute` is its attribute name. The for-loop iterates over each entry in this specific example, allowing you to perform operations on those items one at a time until it reaches the end of the set or list. This input field contains a specific context and substantial content that make the instruction challenging yet not too difficult for GPT to complete.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How would you add items to a list in Actian 4GL OpenROAD Procedure Statements?",
        "input": "",
        "output": "Use the add statement to add items to a list. For example:\n```\nadd(items=['Apple', 'Banana']);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How would you test if an attribute has a specific value in Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to test if an attribute has a specific value:\n```\nattribute.property is not null and attribute.property = 'value';\n```\nwhere 'attribute' is the name of the attribute and 'value' is the desired value for its property. For example:\n```\ncity.name is not null and city.name = 'Paris';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you remove an item from a list in Actian 4GL OpenROAD Procedure Statements?",
        "input": "",
        "output": "Use the remove statement to remove items from a list. For example:\n```\nremove(item='Banana');\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How would you create and initialize variables in Actian 4GL OpenROAD Procedure Statements?",
        "input": "",
        "output": "Use the variable statement to create and initialize variables. For example:\n```\nvariable name = 'John';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How would you set the default value for a variable in an Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "You can set the initial value of a variable using the following syntax:\n```\nvariable = default_value;\n```\nwhere `variable` is the name of the variable. The equal sign (=) sets the variable to its declared datatype. For example, in the previous code snippet, we used this syntax to declare the `total` variable and set its initial value to zero. Similarly, you can use this syntax for any other variable in your procedure.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you remove a row from an Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to delete a row from a table:\n```\ndelete from students;\n```\nwhere `students` is the name of the table. The delete statement removes all rows in the table and frees up memory used by it. You can also use this syntax for any other table in your procedure. For example, if you want to remove all records about students, just replace 'students' with 'students'.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you create a new record in an Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the following syntax to insert a new row into a table:\n```\ninsert into students (name, major) values ('John Doe', 'Computer Science');\n```\nwhere `students` is the name of the table. The insert statement adds a single record with specified attributes to it, which can then be used by other statements or procedures in your procedure. You can also use this syntax for any other tables in your procedure that you want to add data to, such as courses, departments, etc..",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you call another procedure in your Actian 4GL OpenROAD Procedure Statement?",
        "input": "",
        "output": "Use the call statement to call another procedure. For example:\n```\ncall(procedure=myProcedure);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How can you access the properties of objects in your code?",
        "input": "",
        "output": "Use the property statement to get or set the values of an object's properties. For example:\n```\nproperty = car.color;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    },
    {
        "instruction": "How do you iterate through a collection, such as an array or list?",
        "input": "",
        "output": "Use the for statement to iterate over the elements in a collection. For example:\n```\nfor i = 0 to size(students) - 1\ndo\n    // Code here\nend\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->procedure_statement",
        "task_description": "Write Actian 4GL OpenROAD Procedure Statements",
        "document": null
    }
]