version: 0.2
env:
  variables:
    CUDA_HOME: "/usr/local/cuda"
phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - apt-get update && apt-get install -y cmake
  build:
    commands:
      - echo "Installing Python dependencies"
      - pip install --upgrade pip

      - echo "Installing PyTorch"
      - pip uninstall -y torch
      - pip cache purge
      - pip install torch --index-url https://download.pytorch.org/whl/cu118

      - echo "Installing llama-cpp-python"
      - pip uninstall -y llama-cpp-python
      - pip cache remove llama_cpp_python
      - CMAKE_ARGS="-DLLAMA_CUBLAS=on" FORCE_CMAKE=1 pip install llama-cpp-python==0.2.75 --no-cache-dir

      - echo "Installing InstructLab"
      - pip install instructlab --no-cache-dir
      - |
        python -c '
        import llama_cpp
        is_supported = llama_cpp.llama_supports_gpu_offload()
        print("Is GPU acceleration supported: " + str(is_supported))
        '

      - echo "Cloning repositories"
      - git clone https://github.com/nicklamb97/generated.git
      - git clone https://github.com/nicklamb97/instructlab-config.git

      - echo "Copying config file"
      - cp instructlab-config/config.yaml .
      - ilab --help

      - echo "Installing huggingface_hub"
      - pip install huggingface_hub

      - echo "Downloading pre-trained model"
      - ilab model download --repository=NickLamb/OpenROAD-7B-Instruct --filename=OpenROAD-7B-Instruct.Q4_K_M.gguf

      - echo "Uploading to Hugging Face"
      - |
        python -c '
        import os
        from huggingface_hub import login, upload_folder
        try:
            token = os.environ.get("HF_TOKEN")
            if not token:
                raise ValueError("HF_TOKEN environment variable is not set")
            login(token=token)
            upload_folder(
                folder_path="models",
                path_in_repo="",
                repo_id="NickLamb/OpenROAD-7B-Instruct",
                repo_type="model"
            )
            print("Upload successful")
        except Exception as e:
            print(f"Error during upload: {str(e)}")
            exit(1)
        '
artifacts:
  files:
    - '**/*'
