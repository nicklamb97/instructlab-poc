[
    {
        "instruction": "What are some other data types supported in OpenROAD?",
        "input": "",
        "output": "Other data types supported in OpenROAD include:\n1. money\n2. boolean (though not as an intrinsic data type)",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Can you list out all the data types in OpenROAD?",
        "input": "",
        "output": "Here is a list of the supported data types in OpenROAD:\n1. char / character\n2. varchar / character varying\n3. long varchar / clob / character large object / char large object\n4. nchar / nvarchar\n5. integer / integer4\n6. smallint / integer2\n7. bigint / integer8\n8. decimal\n9. float / float8 / double precision\n10. date\n11. timestamp (including with/without time zone)",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Can you explain how a variable is declared in OpenROAD?",
        "input": "",
        "output": "To declare a variable, use the following syntax:\n`DECLARE variable-name [data-type];`\nFor example, to declare a variable called `myVariable` of type char with length 50 and no initial value:\n`DECLARE myVariable CHAR(50);`\nThe data type for the declared variable is required. You can also declare variables by using the `CREATE VARIABLE` statement. For example:\n`CREATE VARIABLE myVariable CHAR(50);`\n** Note: The above output is incomplete and you have to add the missing information such as if a default value can be used while creating a variable or not, etc.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "How to specify a type for an array in OpenROAD?",
        "input": "",
        "output": "The `TYPE` keyword is used to specify the data type of the elements in an array. For example:\n`DECLARE myArray ARRAY OF myType;`\nThe above syntax declares an array called `myArray` that has elements of type `myType`. The type `myType` can be any valid OpenROAD data type. You can also specify a subtype as part of the data type by using the syntax:\n`DECLARE myArray ARRAY OF myType(subtype);`\nFor example, to create an array called `mySubArray` with elements of type `myType` and sub-type 10:\n`DECLARE mySubArray ARRAY OF myType (10);`\nThe above syntax declares an array called `mySubArray` that has elements of type `myType(10)`. You can also specify a sub-subtype by using the following syntax:\n`DECLARE myArray ARRAY OF myType(subtype1(subsubtype));`\nFor example, to create an array called `mySubArray` with elements of type `myType(5)` and sub-sub-type 20:\n`DECLARE mySubArray ARRAY OF myType (5)(20);`\nThe above syntax declares an array called `mySubArray` that has elements of type `myType(5, 20)`.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the loss of precision noted about timestamp (including with/without time zone)?",
        "input": "",
        "output": "Loss of precision may occur when using timestamps with fractional seconds. Fractions are truncated to an integer value in storage and, therefore, returned to client-side applications as an integer value.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Which of these types of data type support precision?",
        "input": "",
        "output": "The following data types support precision:\n1. Decimal\n2. Float\n3. Double Precision",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the Date and Time data types supported in OpenROAD?",
        "input": "",
        "output": "Here is a list of Date and Time data types supported in OpenROAD:\n1. date\n2. timestamp (including with/without time zone)",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Which of the following is NOT a numeric data type?",
        "input": "",
        "output": "float8",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the name of OpenROAD system class that is used to represent money data type in 4GL applications?",
        "input": "",
        "output": "MoneyObject",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Can a class type be used as data type in OpenROAD?",
        "input": "",
        "output": "Yes, a class type can be used as a data type in OpenROAD. The `TYPE` keyword is used to specify the type of elements in an array that contains classes. For example:\n`DECLARE myArray ARRAY OF myClass;`\nThe above syntax declares an array called `myArray` that has elements of class `myClass`. You can also use a subtype as part of the data type by using the syntax:\n`DECLARE myArray ARRAY OF myClass (subtype);`\nFor example, to create an array called `mySubArray` with elements of class `myClass` and sub-type 10:\n`DECLARE mySubArray ARRAY OF myClass (10);`\nThe above syntax declares an array called `mySubArray` that has elements of class `myClass` and sub-type 10. You can also specify a sub-subtype by using the following syntax:\n`DECLARE myArray ARRAY OF myClass(subtype1 (subsubtype));`\nFor example, to create an array called `mySubArray` with elements of class `myClass` and sub-type 5 and sub-sub-type 20:\n`DECLARE mySubArray ARRAY OF myClass (5)(20);`\nThe above syntax declares an array called `mySubArray` that has elements of class `myClass` and sub-type 5, sub-sub-type 20.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are some of the differences between `varchar` and `nvarchar`?",
        "input": "",
        "output": "There are several differences between varchar and nvarchar. The main difference is that char/varchar types store one byte per character, whereas nchar/nvarchar types store two bytes (or more) per character. Additionally, nvarchar allows for Unicode characters up to 4-bytes long, while varchar supports Unicode characters up to 3-bytes long.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "For which OpenROAD Intrinsic Data Types is the client-side Coercion true?",
        "input": "",
        "output": "The client-side coercion for the following OpenROAD intrinsic data types is true:\n1. char/character\n2. varchar\n3. long varchar (long varchar / clob / character large object / char large object)\n4. nchar/nvarchar\n5. integer\n6. smallint\n7. integer8\n8. decimal\n9. float\n10. double precision",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Can a class data type be made nullable?",
        "input": "",
        "output": "No. A class data type is already defined and cannot be changed or redefined. It's important to note that a class data type is always nullable.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Is money also known as currency?",
        "input": "",
        "output": "Yes, in OpenROAD, money and currency are synonymous terms. Money refers to an amount of value, while currency refers to the form or standard in which money is issued (such as US dollars, Japanese yen, etc.).",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What data types are not supported in OpenROAD?",
        "input": "",
        "output": "The following data types are not supported in OpenROAD:\n1. binary\n2. blob (binary large object)\n3. bytea\n4. nchar (not yet implemented)\n5. nvarchar (not yet implemented)\n6. numeric, decimal and other precision-based numeric formats\n7. money\n8. boolean\n9. interval (not yet implemented)\n10. array (not yet implemented)",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the user class data types in OpenROAD?",
        "input": "",
        "output": "OpenROAD does not support user-defined classes. The following types are available for user classes:\n1. char / character\n2. varchar / character varying\n3. date\n4. timestamp (including with/without time zone)\n5. decimal\n6. float / float8 / double precision\n7. integer / integer4\n8. smallint / integer2\n9. bigint / integer8\n10. boolean",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the system class data types in OpenROAD?",
        "input": "",
        "output": "The following types are available for user classes:\n1. char / character\n2. varchar / character varying\n3. date\n4. timestamp (including with/without time zone)\n5. decimal\n6. float / float8 / double precision\n7. integer / integer4\n8. smallint / integer2\n9. bigint / integer8\n10. boolean\n11. long varchar / clob / character large object / char large object (not yet implemented)\n12. nchar / nvarchar (not yet implemented)",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the difference between decimal and numeric in OpenROAD?",
        "input": "",
        "output": "The difference between the decimal and numeric data types is that the numeric data type can also accept precision and scale values, whereas the decimal data type cannot.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the OpenROAD Intrinsic Data Types for the decimal type?",
        "input": "",
        "output": "The OpenROAD intrinsic data type for the decimal type is decimal.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the OpenROAD Built-in Scalar Objects for the character types?",
        "input": "",
        "output": "For each of the character types, the OpenROAD built-in scalar object is StringObject (for varchar, nvarchar, and long varchar).",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What data types can be used in SQL?",
        "input": "",
        "output": "You can use the following data types in SQL: char, varchar, decimal, float8, integer, smallint, bigint.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "OpenROAD's transparent Unicode support negates the need for nchar and nvarchar data types in OpenROAD 4GL\napplications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\nTask 2:\nWhat are the system class data types in OpenROAD?",
        "input": "The following types are available for user classes:\n1. char / character\n2. varchar / character varying\n3. date\n4. timestamp (including with/without time zone)\n5. decimal\n6. float / float8 / double precision\n7. integer / integer4\n8. smallint / integer2\n9. bigint / integer8\n10. boolean\n11. long varchar / clob / character large object / char large object (not yet implemented)\n12. nchar / nvarchar (not yet implemented)\n\nTask 3:\nWhat is the note regarding implicit conversions in OpenROAD?",
        "output": "OpenROAD's built-in automatic conversions between data types are based on a set of rules that\ndetermine when data type conversion can occur. When converting an expression to a different data type,\nthe following rules apply:\n\n* If the value is null or missing and there is no coercion defined for the null or missing value,\nthen it results in a runtime error. For example, if you want to convert a boolean value of true or false\nto an integer value, then the true value becomes an integer 1 and the false value becomes an integer 0.\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8 / double precision\n  3. char / character varying\n  4. date\n  5. timestamp (including with/without time zone)\n  6. decimal\n* If there is no conversion defined between two data types, then the data type with a lower rank is used\nin the resulting expression, where rank is determined by the following:\n  1. boolean\n  2. integer / float8",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Which is the default data type for an integer in OpenROAD?",
        "input": "",
        "output": "The default data type for an integer is `integer4`.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the other types of data types?",
        "input": "",
        "output": "The other types of data types supported in OpenROAD are:\n1. money\n2. boolean\n\n\nBased on the information provided, please write a list of instructions for 5 tasks to be given to a GPT language model as follows:",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What OpenROAD data types support date and time?",
        "input": "",
        "output": "The following data types in OpenROAD support date and time:\n1. timestamp (including with/without time zone)",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Which is the best data type to use for a description field in a database table?",
        "input": "",
        "output": "The best data type to use for a description field in a database table is varchar.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Can a user declare a class type as non-nullable?",
        "input": "",
        "output": "A class type cannot be declared non-nullable in OpenROAD because class data types are always nullable by default. However, you can use the `not null` clause to create a column that cannot be null if its reference or array variable has a non-null value.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the OpenROAD Built-in Scalar Object for the integer type?",
        "input": "",
        "output": "The OpenROAD built-in scalar object for the `integer` data type is `IntegerObject`.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the default data type of a class variable in OpenROAD?",
        "input": "",
        "output": "The default data type of a class variable in OpenROAD is `not supported`.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the OpenROAD Intrinsic Data Types for the timestamp (including with/without time zone) data types?",
        "input": "",
        "output": "OpenROAD does not have an intrinsic timestamp (including with/without time zone) data type. However, you can create your own custom data types or use the built-in object classes.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the OpenROAD Intrinsic Data Types for the boolean data type?",
        "input": "",
        "output": "OpenROAD does not have a boolean data type. However, you can create your own custom data types or use the built-in object classes.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the difference between `integer` and `integer4`?",
        "input": "",
        "output": "`integer` and `integer4` are the same data type. The only difference is that the latter is an alias for `integer`.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Can you list out all the data types in OpenROAD and what is it used for?",
        "input": "",
        "output": "Here is a list of supported data types in OpenROAD and an explanation of what each can be used for:\n1. char / character - A simple variable can be any of these supported data types, which are all string types.\n2. varchar / character varying - A simple variable can be any of these supported data types, which are all string types.\n3. long varchar / clob / character large object / char large object - These data types support long strings and are often used in applications that require large amounts of text data.\n4. nchar / nvarchar - OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n5. integer / integer4 - A simple variable can be any of these supported data types, which are all numerical types.\n6. smallint / integer2 - A simple variable can be any of these supported data types, which are all numerical types.\n7. bigint / integer8 - A simple variable can be any of these supported data types, which are all numerical types.\n8. decimal - A simple variable can be any of these supported data types, which are all numerical types.\n9. float / float8 / double precision - A simple variable can be any of these supported data types, which are all numerical types.\n10. date - A simple variable can be any of these supported data types, which are all dates and times types.\n11. timestamp (including with/without time zone) - A simple variable can be any of these supported data types, which are all dates and times types.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the Client-side Coercion for nchar?",
        "input": "",
        "output": "Client-side Coercion: yes",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the default data type for a date in OpenROAD?",
        "input": "",
        "output": "The default data type for a date in OpenROAD is `date`.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the OpenROAD built-in scalar objects of a float8 data type?",
        "input": "",
        "output": "A FloatObject.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Which intrinsic data types supports floating point numbers with an accuracy of up to 28 decimal places?",
        "input": "",
        "output": "decimal",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the default precision for a float?",
        "input": "",
        "output": "The default precision for a float is 26.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the OpenROAD Intrinsic Data Types for money?",
        "input": "",
        "output": "money",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the differences between `nchar` and `nvarchar`?",
        "input": "",
        "output": "There is a difference between `nchar` and `nvarchar`. `nvarchar` allows for Unicode characters up to 4-bytes long, while `nchar` supports Unicode characters up to 2-bytes long.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the difference between varchar and long varchar?",
        "input": "",
        "output": "varchar/char and long varchar/char are both used in Actian's OpenROAD programming language to store character values, but they have different storage requirements. Long varchar stores up to 4095 characters, whereas varchar stores only up to 255 characters. The difference between the two data types is mainly the maximum number of characters that can be stored in a field and the storage format used by OpenROAD for these data types.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the OpenROAD intrinsic data types?",
        "input": "",
        "output": "OpenROAD supports the following intrinsic data types:\n1. char / character\n2. varchar / character varying\n3. date\n4. timestamp (including with/without time zone)\n5. decimal\n6. float / float8 / double precision\n7. integer / integer4\n8. smallint / integer2\n9. bigint / integer8\n10. boolean",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the client-side coercion for a user class data type in OpenROAD?",
        "input": "",
        "output": "A user class data type supports both client-side and server-side coercions by default, unless it is declared non-nullable. For example, the following statement declares an instance variable of type IntegerObject with a null value:\n\nIntegerObject i;\n\nHowever, the next statement causes client-side coercion because the string \"2\" cannot be converted to a valid integer without truncation:\n\ni = \"2\";\n\nTo avoid client-side coercion, use the `not null` clause for any class data type that can have a value of null. For example, use this statement instead:\n\nIntegerObject i(null);\n*",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the default data type for a variable when no explicit data type declaration is provided?",
        "input": "",
        "output": "In OpenROAD, the default data type of a variable depends on whether it is declared as reference or class. If there is no explicit data type declaration for a variable that is declared as a class, then OpenROAD assumes a data type of char/character. The reason for this is because the longest length that can be stored in a field with a default data type of char/character is 4095 characters (same as long varchar).",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Which data type is suitable for storing the value $5.00?",
        "input": "",
        "output": "The decimal data type is suitable to store the value $5.00.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the difference between a character type and a numeric type?",
        "input": "",
        "output": "A character type is used to store alphabetic characters and other non-numeric symbols, whereas a numeric type stores numerical values. The main difference between the two data types is the way they handle and manipulate values. Character types are ideal for text-based applications while numeric types are suitable for calculations.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the default client-side coercion for OpenROAD?",
        "input": "",
        "output": "For numeric data types, client-side coercion is no. For other types, it depends on the implementation.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "How do you declare a data type non-nullable in OpenROAD?",
        "input": "",
        "output": "You can use the `not null` clause to declare a data type non-nullable. For example, you might have an integer variable called `age` that is declared as:  `integer age not null`. The keyword `not null` indicates that this value cannot be set to NULL when the record is created or updated.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is a reference variable?",
        "input": "",
        "output": "A reference variable is a data type that can store the name of another class, system class or user class in OpenROAD 4GL. A reference variable does not store an actual object but rather a pointer to an object. When you use a reference variable, you cannot create the object it references until the `new` keyword is used with the object name. For example: `dim a as ref b; new b;`",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is an example for a client-side coercion?",
        "input": "",
        "output": "For the nchar / nvarchar type, client-side coercion may be required if you are passing a value from one OpenROAD application to another that uses a different data type.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the difference between `timestamp` and `datetime`?",
        "input": "",
        "output": "Timestamp includes a time zone (or offset) while datetime does not.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Which data type can hold the most values?",
        "input": "",
        "output": "The array data type can hold the most values. The length of an array can be specified during declaration using the `ARRAY` keyword followed by a list of integers enclosed in parentheses, for example: `DECLARE myArray ARRAY OF myClass (3);`. Each element in an array has its own position.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the default length of a character field?",
        "input": "",
        "output": "There is no default length for a character field; it can be declared to any size by specifying its length when defining it in the CREATE TABLE statement. For example: `CREATE TABLE myTable (myCharField char(16));`.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Which data type should be used if you want to store a timestamp (including with/without time zone)?",
        "input": "",
        "output": "If you want to store a timestamp including time zone, the OpenROAD Intrinsic Data Type is not supported but rather a `timestamp with timezone` or a `timestamp` data type that stores a date and a time with time zone. The server-side coercion should be enabled for this data type if you want to use it.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the difference between `date` and `datetime`?",
        "input": "",
        "output": "Timestamp includes a time zone (or offset) while datetime does not.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "Which is the OpenROAD Intrinsic Data Type for the money data type?",
        "input": "",
        "output": "The `money` data type in OpenROAD is supported as an intrinsic data type and it has an associated scalar object, called `MoneyObject`.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What are the scalar objects available in OpenROAD?",
        "input": "",
        "output": "The following scalar objects are available in OpenROAD:\n1. IntegerObject\n2. DecimalObject\n3. FloatObject\n4. DateObject\n5. StringObject\n6. LongVcharObject\n7. MoneyObject\nNote: The scalars objects are built-in OpenROAD classes, so it is not necessary to import them into your application program. However, some scalar object types may require an initialization or default value in certain situations.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the difference between a scalar data type and a reference data type?",
        "input": "",
        "output": "The primary difference between a scalar data type (integer, decimal, float etc) and a reference data type is that a scalar variable can be assigned an initial value and stored in memory. A reference variable holds an address to the actual object and not its value. Scalar variables are used when you need the data in a local scope or when you do not need any changes made to it to affect other parts of your code. Reference variables are used when you need to manipulate objects.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What is the purpose of Client-side Coercion?",
        "input": "",
        "output": "Client side coercion refers to converting a value from one data type to another for presentation purposes. It can be used when you have a variable that holds a data type that cannot be used in a particular context but you would like to present it differently. For example, when you print an integer on the screen, you may want to convert it to a string with thousands separator so that it is easier to read by humans.",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    },
    {
        "instruction": "What data types do you use in your applications?",
        "input": "",
        "output": "There are several data types that can be used in OpenROAD application, including integer, smallint, bigint, decimal, float8, date and varchar. There are other data types like money, boolean but they are not commonly used. It is also possible to use user-defined data types by defining them using the `CREATE TYPE` statement.\nHere are the examples for Task 4:",
        "taxonomy_path": "knowledge->programming_languages->openroad->language_guide->data_types",
        "task_description": "Explain data types in OpenROAD Actian 4GL programming language",
        "document": [
            "## Data Types\n\nWhen you explicitly declare a variable, you must assign a data type to it. A simple variable can be any of the following supported data types:\n\n### Character Types\n\n#### char / character\n- OpenROAD Intrinsic Data Type: char\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### varchar / character varying\n- OpenROAD Intrinsic Data Type: varchar\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### long varchar / clob / character large object / char large object\n- OpenROAD Intrinsic Data Type: not supported\n- OpenROAD System Class: LongVcharObject\n- Client-side Coercion: no\n- Server-side Coercion: no\n\n#### nchar / nvarchar\n- OpenROAD Intrinsic Data Type: nchar* / nvarchar*\n- OpenROAD Built-in Scalar Object: StringObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Numeric Types\n\n#### integer / integer4\n- OpenROAD Intrinsic Data Type: integer, integer4\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### smallint / integer2\n- OpenROAD Intrinsic Data Type: smallint, integer2\n- OpenROAD Built-in Scalar Object: IntegerObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### bigint / integer8\n- OpenROAD Intrinsic Data Type: integer8\n- OpenROAD Built-in Scalar Object: none (for bigint), IntegerObject (for integer8)\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### decimal\n- OpenROAD Intrinsic Data Type: decimal\n- OpenROAD Built-in Scalar Object: DecimalObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### float / float8 / double precision\n- OpenROAD Intrinsic Data Type: float, float8\n- OpenROAD Built-in Scalar Object: FloatObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n### Date and Time Types\n\n#### date\n- OpenROAD Intrinsic Data Type: date\n- OpenROAD Built-in Scalar Object: DateObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### timestamp (including with/without time zone)\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: yes**\n- Server-side Coercion: yes\n\n### Other Types\n\n#### money\n- OpenROAD Intrinsic Data Type: money\n- OpenROAD Built-in Scalar Object: MoneyObject\n- Client-side Coercion: yes\n- Server-side Coercion: yes\n\n#### boolean\n- OpenROAD Intrinsic Data Type: not supported\n- Client-side Coercion: no\n- Server-side Coercion: yes\n\n*Note on nchar and nvarchar: OpenROAD transparent Unicode support negates the need for these data types in OpenROAD 4GL applications. The varchar data type with UTF8 encoding is sufficient for Unicode support.\n\n**Loss of precision may occur\n\nFor more detailed information about specific data types, including length and storage formats, refer to the Storage Formats of Data Types documentation. If using Enterprise Access, consult the Enterprise Access documentation for data type specifics.\n\nA reference or array variable can be any named user class or system class. For information about creating a named user class, see the Workbench User Guide.\n\nBy default, all data types are nullable. You can use the `not null` clause to declare a data type non-nullable. However, a class data type is always nullable."
        ]
    }
]