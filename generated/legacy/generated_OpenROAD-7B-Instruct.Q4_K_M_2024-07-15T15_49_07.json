[
    {
        "instruction": "How can you access the value of a field in an object?",
        "input": "",
        "output": "Use the 'field' function to access the value of a field in an object like this:\n```\nfield = object.field('title');\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you create a new record in a table?",
        "input": "",
        "output": "Create a new record in a table with the following code:\n```\nrecord = Table['title'].NewRecord();\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How can you create a new record in an Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the 'new record' statement to create a new record like this:\n```\nnew record(title = 'My New Record');\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How could you initialize a variable of any type in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can initialize variables of any type with the following syntax:\n```\nvariable = new(class_name);\n```\nwhere 'variable' is the name of your variable and 'class_name' is the fully qualified class name. This example shows how to create an object variable, but you can also use this syntax for simple variables or array variables.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you remove duplicates from a list in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "To remove duplicates from a list, you can use the 'distinct' keyword like this:\n```\nlist.distinct;\n```\nThis will eliminate any duplicate values in your list. You can also use this syntax for removing duplicates from arrays or objects.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How can you delete a record in Actian  4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the 'delete record' statement to remove a record from memory like this:\n\n```\ndelete record (title = 'My Old Record');\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How can you test the validity of a string in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the 'is valid' function to test the validity of a string like this:\n```\nif (name is not null and length(name) > 0) then\n    // Do something with name here\nelse\n    error('Invalid name');\nend if;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you declare a new array in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the 'new array' statement to declare a new array like this:\n```\nnew array of integer(10);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How do you determine whether two objects are equal or not?",
        "input": "",
        "output": "You can compare the attributes of two objects with the following syntax:\n```\nif (object1.attribute1 == object2.attribute1 and object1.attribute2 == object2.attribute2) {\n  // code here\n} else {\n  // code here\n}\n```\nWhere 'object1' is a reference to the first object, 'attribute1' is a reference to an attribute on that object, and 'attribute2' is a reference to another attribute on that same object. This example shows how to compare attributes between two objects but you can use this syntax for any attribute you want to compare.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How do you create a new record in the database?",
        "input": "",
        "output": "Use the 'insert into' statement like this:\n```\ninsert into customers(customer_id, company_name, address);\n```\nwhere 'customers' is the name of your table, and 'customer_id', 'company_name', and 'address' are the column names you want to set. This example shows how to create a new record in the database but you can also use this syntax for updating existing records or deleting them.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "What are some common symbols that can be used with the 'if' keyword in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "The following symbols can be used with the 'if' keyword:\n+ (plus)\n- (minus)\n= (equal to)\n!= (not equal to)\n< (less than)\n> (greater than)\n<= (less than or equal to)\n>= (greater than or equal to)",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How can you compare two variables of any type in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can compare variables of any type with the following syntax:\n```\nvariable1 = new(class_name);\nvariable2 = new(class_name);\nif (variable1.attribute1 is not null) and (variable2.attribute2 > 100) then do something;\n```\nwhere 'variable1' and 'variable2' are the names of your variables and 'attribute1' and 'attribute2' are the names of their attributes. This example shows how to compare objects, but you can also use this syntax for simple variables or array variables.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How could you sort a list alphabetically by its items in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the following syntax to sort a list alphabetically by its items:\n```\nlist = new(class_name);\nlist.order_by(attribute_name ascending);\nlist.all();\n```\nwhere 'list' is the name of your list and 'attribute_name' is the name of the attribute you want to sort. This example shows how to sort an object list, but you can also use this syntax for simple lists or array lists.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How could you create a random number between two specified values in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can generate a random number between two specified values with the following syntax:\n```\nvariable = new(class_name);\nvariable.value = rand(min_value)..max_value;\n```\nwhere 'variable' is the name of your variable and 'min_value' and 'max_value' are the minimum and maximum values for that variable. This example shows how to create an integer variable, but you can also use this syntax for floating point variables or boolean variables.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How could you print out all members of a specified group in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can display the members of any group with the following syntax:\n```\ngroup = new(class_name);\ngroup.members().each((member) {\n  console.log('Member:', member.name(), 'Role:', member.role());\n});\n```\nwhere 'group' is the name of your group and 'member' is one of its members. This example shows how to iterate over an enumeration, but you can also use this syntax for simple variables or arrays.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How could you create a new record in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can add a new record with the following syntax:\n```\nrecord = new(class_name);\nrecord.attributes().each((attribute) {\n  attribute.value = '<your data here>';\n});\n```\nwhere 'class_name' is the name of your record class and '<your data here>' is any valid value for that attribute. This example shows how to set attributes on objects, but you can also use this syntax for simple variables or arrays.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How can you set the background color for an application in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the following statement to change the background color of your application:\n\n```\nbackground color = #ffffff;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How can you create a new window in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the 'new window' statement to open a new window like this:\n\n```\nnew window('My New Window');\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How could you print a message to the user in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can display messages to the user with the following syntax:\n```\nmessage = new(class_name);\nmessage.text = '<your text here>';\nmessage.display();\n```\nwhere 'class_name' is the name of your message class and '<your text here>' is any valid value for that attribute. This example shows how to send messages, but you can also use this syntax for simple variables or arrays.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How can you create a new window with title 'My Application' in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Create a new window with title 'My Application' like this:\n```\nwindow = new(class_name);\nwindow.title = 'My Application';\nwindow.show();\n```\nwhere 'class_name' is the name of your class or object type that represents the window. This example shows how to create an instance of a simple class, but you can also use this syntax for complex objects like arrays or enumerations.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you display the value of attribute 'color' on object 'car' in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Display the value of attribute 'color' on object 'car' like this:\n```\ncar.color.value;\n```\nwhere 'car' is the name of your car object and 'attribute_name' is the name of the attribute you want to access. This example shows how to get the value from an attribute, but you can also use it for methods or properties.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you add items to an existing array in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the 'add to array' statement to add items to an array like this:\n```\nadd to array(myCarry) {\n      field1 = 'My Value';\n      field2 = 3;\n}\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How can you delete all items from a specific array in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the 'remove from array' statement to remove all items from an array like this:\n```\nremove from array(myCarry);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you call a function that returns an integer value in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the 'call' statement followed by the function name and parentheses containing any required arguments like this:\n```\nresult = call(square(number));\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How can you create a new record in a database using Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the 'create' statement with the object name and the desired fields like this:\n```\ncreate(customer) {\n      name = 'Acme Inc';\n      address = '123 Main Street';\n      city = 'Anytown';\n      state = 'CA';\n}\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How can you use an array as a parameter in an Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can pass an array to a procedure or method with the following syntax:\n```\nprocedure someProcedure(param_array param) is\nbegin\n  for i = 1 to param_array.length do\n    message('Item ' || char(i) || ': ' || param_array[i].value);\n  endfor;\nend;\n```\nwhere 'someProcedure' is the name of your procedure or method and 'param_array' is the name of the array parameter. This example shows how to use arrays as parameters, but you can also use this syntax for simple variables or object variables.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you compare two strings alphabetically in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "To compare strings alphabetically, use the 'compare' function like this:\n```\nvariable.compare(value1, value2);\n```\nwhere 'variable' is your variable name, and 'value1' and 'value2' are the values you want to compare. This example shows how to compare strings in an object variable, but you can also use it for simple variables or arrays.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How could you loop over all elements of a list or array in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "To iterate through all elements of a list or array, use the 'for each' keyword like this:\n```\nlist.for_each(element => {\n    // code here\n});\n```\nThis will go through every item in your list or array and execute the provided code for each one. You can also use this syntax for iterating over objects or arrays, as long as they have similar properties to lists/arrays.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you create a new object of class 'T\u2019 in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the following syntax to create a new object of class 'T':\n```\nt = new T();\nt.Init(parameters);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you destroy an existing object of class 'T\u2019 in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the following syntax to destroy an existing object of class 'T':\n```\nt.Destroy();\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you set a variable to null in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can reset the value of any variable to 'null' using this syntax:\n```\nvariable.destroy();\n```\nwhere 'variable' is your variable name. This example shows how to destroy objects in an array or simple variables, but you can also use it for simple variables or arrays.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How could you create a new object of a given class in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can create new objects of any class with the following syntax:\n```\nnew(class_name);\n```\nwhere 'class_name' is your desired class name. This example shows how to create objects in arrays or simple variables, but you can also use it for complex variables like enums or pointers.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you create an object of class 'Car' in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the 'new object' statement to create an instance of a car class like this:\n```\nnew Car(model = 'Corvette', color = red);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How can you set the background color of a window?\n*",
        "input": "<noinput>\n*",
        "output": "Use the 'window' function and its 'backgroundColor' property to set the background color of a window like this:\n```\nwindow.backgroundColor = '#ff0000';\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How can you create a new record in a table?",
        "input": "",
        "output": "Use the 'create' statement followed by the table name and open parentheses like this:\n```\ncreate table customers(\n    id integer not null primary key,\n    first_name varchar(25) not null,\n    last_name varchar(30) not null,\n    address varchar(100),\n    city varchar(50),\n    state varchar(2),\n    zip_code char(5),\n);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How do you update the values within a record in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can modify the attributes of any object using the 'update' statement and setting its attribute names along with new values. The following example shows how to change an employee's salary:\n```\nupdate(employee) {\n      salary = 100 * hourly_rate;\n}\n```\nThis statement sets the employee's salary to twice what it was before, assuming a hourly rate of $50. You can also use this syntax for other attributes like names or addresses. The above example demonstrates how to modify objects in arrays or simple variables, but you can also use it for complex variables like enums or pointers.",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you sort items by their color order in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can sort any collection by its color attributes using this syntax:\n```\ncollection.sort(by: color);\n```\nThis example shows how to sort objects in an array or simple variables, but you can also use it for simple variables or arrays. It takes into account the 'order by' clause which specifies what attribute of the items should be used as the sort key. In this case, we used 'color' as our attribute name, but you could have used any other valid name instead like:\n```\ncollection.sort(by: name);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How would you search for a specific item in a list or array in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can find any object within a collection using this syntax:\n```\nfind(object);\n```\nThis example shows how to find objects in an array or simple variables, but you can also use it for simple variables or arrays. It takes into account the 'find' clause which specifies what attribute of the items should be used as the search key. In this case, we used 'name' as our attribute name, but you could have used any other valid name instead like:\n```\nfind(title);\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "What is one way that you can query data from a table in Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "You can use the 'select' statement to retrieve records from a table like this:\n```\nselect * from customers;\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    },
    {
        "instruction": "How could you delete a record from a database using Actian 4GL OpenROAD For Statement?",
        "input": "",
        "output": "Use the 'delete' statement with the object name and the desired fields like this:\n```\ndelete(customer) {\n      name = 'Acme Inc';\n      address = '123 Main Street';\n}\n```",
        "taxonomy_path": "compositional_skills->programming_languages->actian_4gl->for_statement",
        "task_description": "Write Actian 4GL OpenROAD For Statement",
        "document": null
    }
]