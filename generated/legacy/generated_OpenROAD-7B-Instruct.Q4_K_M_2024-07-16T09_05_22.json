[
    {
        "instruction": "How does Actian 4GL determine the order of attributes in a role?",
        "input": "",
        "output": "Actian 4GL determines the order of attributes in a role by using a simple, yet effective algorithm. This algorithm takes into account the following factors:\n- The order in which the attributes were originally declared when creating the role.\n- Any specified order of attributes that may have been changed since then (e.g., through use of the with clause).",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    },
    {
        "instruction": "What are some common uses for the alter role statement?",
        "input": "",
        "output": "Some common uses include:\n- Changing passwords for existing roles. For example, you might use this statement to set a stronger password on your bank account or change the password for your email address.\n- Removing permissions from roles that no longer need them. This can help reduce clutter in your database and improve performance by freeing up memory used by unused attributes.\n- Updating security audit attributes associated with roles. For example, you might use this statement to modify how often an auditor logs into their system or modifies the type of data they can access.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    },
    {
        "instruction": "Create Role Statement\nThe create role statement creates an attribute for a specified role identifier. This statement has the following syntax:\ncreate role role_id {, role_id}\n[with with_option {, with_option}];",
        "input": "",
        "output": "The create role statement takes 2 attributes to define a new role in Actian 4GL SQL. These are the name of the role and its password. For example:\ncreate role employee_1 with\n    name = 'Mary Smith';\n    password = 'secret';",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    },
    {
        "instruction": "What is the difference between the create role statement and the drop role statement?",
        "input": "",
        "output": "The create role statement creates a new role identifier in the iidbdb. The drop role statement removes the attributes associated with an existing role identifier from the iidb.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    },
    {
        "instruction": "How does the alter role statement affect security audit attributes?",
        "input": "",
        "output": "The alter role statement can change the security audit attributes associated with a role identifier. This includes permissions related to maintaining user records, such as creating or updating users in the database system.\n```",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    },
    {
        "instruction": "What parameters does the alter role statement have?",
        "input": "",
        "output": "The statement has the following parameters:\n1. role_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\n2. role_password\nDefines the password for the role. Caution! If no password is specified, any session has access to the specified role identifier and its associated permissions.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    },
    {
        "instruction": "What is the purpose of the alter role statement?",
        "input": "",
        "output": "The purpose of the alter role statement is to change the attributes associated with a previously declared role identifier. This can be useful in many situations, such as:\n- Updating an existing password for security reasons (e.g., when you forget it).\n- Modifying permissions granted to users or groups within your application or database system.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    },
    {
        "instruction": "How do you specify multiple roles with one statement?",
        "input": "",
        "output": "You can specify multiple roles with one statement by using the comma-separated list syntax: alter role role_id, role_id {, with {, with_option}; }; Here, 'role_id' represents any valid role identifier that has been created previously. This allows you to modify attributes for several roles at once, which can save time and simplify complex tasks.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    },
    {
        "instruction": "How can you reset the password for an existing role?",
        "input": "",
        "output": "You can reset the password for an existing role by using the alter role statement with the 'password' parameter set to null. This will remove any previously specified password from the role, allowing you to then specify a new one or leave it empty if desired. Keep in mind that setting this parameter to null will cause all sessions associated with the role identifier to suspend until the statement is completed.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    },
    {
        "instruction": "How do you grant permissions to a user for a specific database?",
        "input": "",
        "output": "You can grant permissions to a user for a specific database by using the create role statement with the 'with privilege' clause specified after it. For example:\ncreate role employee of class(c) with privileges on database iidbdb; This statement creates an employee role with attributes associated with the iidbdb database. The 'with privilege' clause then defines which privileges this new role has for the specified database, including SELECT, INSERT, UPDATE and DELETE. You can also use this syntax to revoke previously granted permissions or limit them in certain ways (e.g., by setting limits on how many records can be accessed).",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    },
    {
        "instruction": "How do you lock pages in the iirole catalog of the iidbdb?",
        "input": "",
        "output": "You can lock pages in the iirole catalog of the iidbdb by using the alter role statement with the 'locking' option specified. For example: alter role new_accounts with locking; This statement locks all pages associated with the new_accounts role identifier in the iirole catalog of the iidbdb. The locking mechanism prevents other sessions from modifying attributes related to this role until you release it or close your connection to the server.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    },
    {
        "instruction": "How do you remove the password associated with a role identifier?",
        "input": "",
        "output": "You can remove the password associated with a role identifier by using the alter role statement with the 'nopassword' option specified after it. For example: alter role chk_inventory with nopassword; This statement removes any previously specified password from the chk_inventory role identifier, allowing you to then set it to null or leave it empty if desired. Keep in mind that setting this parameter to null will cause all sessions attempting to connect to the server to suspend until the statement is completed.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    },
    {
        "instruction": "What is the syntax of the drop role statement?",
        "input": "",
        "output": "The drop role statement has the following syntax:\ndrop role role_id {, role_id}\n[with {, with_option}]\nHere, 'role_id' represents any valid role identifier that has been created previously. This allows you to remove attributes for several roles at once, which can save time and simplify complex tasks.",
        "taxonomy_path": "knowledge->programming_languages->sql_actian_4gl->alter_role",
        "task_description": "Learn about the syntax of Actian 4GL SQL alter role statements.",
        "document": [
            "Alter Role Statement\nThe alter role statement changes the attributes associated with a role identifier.\nThis statement has the following syntax:\nalter role role_id {, role_id}\n[with with_option {, with_option}];\nParameters--Alter Role Statement\nThis statement has the following parameters:\nrole_id\nSpecifies an existing role ID created with the create role statement. If one or more of the specified role identifiers do not exist, the DBMS Server issues a warning, but all valid role identifiers are processed.\nFor more information about role identifiers, see the Ingres Database Administrator Guide.\nrole_password\nDefines the password for the role.\nCaution! If no password is specified, any session has access to the specified role identifier and its associated permissions.\nwith_option\nSpecifies one of the following password options:\nnopassword\npassword = 'role_password'\nPermissions\nYou must have maintain_users privilege and be connected to the iidbdb database.\nYou must have maintain_audit privilege to change security audit attributes.\nLocking\nThe alter role statement locks pages in the iirole catalog of the iidbdb. This can cause sessions attempting to connect to the server to suspend until the statement is completed.\nRelated Statements\nCreate Role Statement\nDrop Role Statement\nExamples--Alter Role Statement\nThe following examples change the attributes associated with a role identifier:\n1.Change the password for the role identifier, new_accounts, to eggbasket.\nalter role new_accounts with\n    password = 'eggbasket';\n2.Remove the password associated with the identifier, chk_inventory.\nalter role chk_inventory with nopassword;"
        ]
    }
]